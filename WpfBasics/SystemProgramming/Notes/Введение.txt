Системное программирование. Введение. Многопоточность.
Развитие вычислительной техники достигло пределов физического плана
и последнее время развивается путем увеличения кол-ва процессоров
вместо ускорения одного процессорного модуля.
 Программирование также смещается от написания одно-ниточных програм
к многониточным - с наличием методов, которые выполняются разными
исполнителями в разных окружениях и, возможно, абсолютно одновременно.
 Потоки (Threads) (не путать, как "поток" переводится еще и stream,
но это поток данных) - это системные ресурсы, позволяющие обеспечить
работу кода отдельно от других потоков.

 Зачем?
- Разгрузка интерфейса: если в обработчике события будет долгий код,
    то интерфейс не будет реагировать на другие события, пока не
    закончится данное.
  = В некоторых системах даже существует запрет на использование
     в обработчиках некоторых инструментов, например, запросов к БД,
     обращение к сетевым ресурсам и т.п.
  = НО! в большинстве случаев элементы интерфейса не разрешают
     менять свое состояние из других потоков. Поэтому работа в 
     многопоточном режиме "пинг-понг" один поток стартует второй 
     поток, второй поток делегирует первому потоку задачи вывода

Main thread (Window)          new Thread(ThreadMethod)
   ctor
   Loaded
   Click    -------------------->  ctor
                                    |
   AddMessage  <-----------------  Invoke(AddMessage)
                                   Sleep() Реально - 
   Message_Click                   Sleep()  здесь
    Messages.Text +=               Sleep()  происходит
     "Сообщение\n";                Sleep()  какая-то долгая
                                   Sleep()  работа
   AddMessage  <-----------------  Invoke(AddMessage)
                                     |
   Message_Click                     X (return - конец потока)
    Messages.Text +=
     "Сообщение\n"; 

Поток создается "на методе", поток стартует и начинает выполнять метод,
после окончания метода поток разрушается.
Есть ограничения для методов, которые предназначены для потоков:
void Method()
void Method(object params)
